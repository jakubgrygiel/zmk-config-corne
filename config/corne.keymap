/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E      &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LGUI   &kp A  &kp S  &kp D      &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C      &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                         &kp LCTRL  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCLAMATION  &kp AT_SIGN           &kp HASH          &kp DOLLAR        &kp PERCENT          &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp COLON  &kp SEMICOLON      &kp DEL
&trans  &kp LC(F4)       &kp LC(NUMBER_0)      &kp LC(NUMBER_1)  &kp LC(NUMBER_2)  &kp LC(BACKSLASH)    &kp LEFT   &kp DOWN       &kp UP        &kp RIGHT  &kp DOUBLE_QUOTES  &kp SQT
&trans  &kp LC(GRAVE)    &kp LC(LS(NUMBER_5))  &kp F12           &kp LEFT_ALT      &kp F7               &kp HOME   &kp PAGE_DOWN  &kp PAGE_UP   &kp END    &kp GRAVE          &kp LA(F4)
                                               &trans            &trans            &trans               &trans     &trans         &kp LEFT_ALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &trans  &kp EXCLAMATION  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE          &kp MINUS     &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp SLASH     &kp DEL
&trans  &trans  &kp AMPERSAND    &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PLUS                &kp EQUAL     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp ASTERISK  &kp SQT
&trans  &trans  &kp PIPE         &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp NON_US_BACKSLASH    &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp PERIOD    &kp TILDE
                                 &trans                &trans                 &trans                  &trans        &trans         &kp RALT
            >;
        };

        both_layer {
            bindings = <
&trans  &bt BT_CLR    &trans  &trans           &trans  &trans    &kp C_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &trans  &trans  &trans
&trans  &bt BT_SEL 0  &trans  &trans           &trans  &trans    &kp C_PREV  &kp C_PLAY_PAUSE   &kp C_NEXT       &trans  &trans  &trans
&trans  &bt BT_SEL 1  &trans  &kp PRINTSCREEN  &trans  &trans    &trans      &trans             &trans           &trans  &trans  &trans
                              &trans           &trans  &trans    &trans      &trans             &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Both {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
